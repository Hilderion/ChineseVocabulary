<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAARwAAACBCAYAAAASewXJAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAS
        dAAAEnQB3mYfeAAAHaVJREFUeF7tXVmQVNWW7dcR/dM/Hf3dfvTH6+joiP7riP4wXkFRc9ac1DwPFPOM
        xfAAmZRBRASVRwEiMyoyiSDIJKCoDyf62b5nKyAKhQwWs0Ux7j7r5j03b2aezLyZefPmUHtFrLDIPMPe
        x9qrznz+jhgMBsMhsOAwGAzHwILDYDAcAwsOg8FwDCw4DAbDMfQLwenru0fnzp6lj04co107t9ObWzfR
        66tX0pgRQ6mloYbWdK3QPsN3SIO0yMNgMOxF2gnOkyeP6ezZM7R713Z6fu4sqq8ZTLmD/hAVkRdlvLtr
        h1YmymYwGNEjLQQHQvDNX07TK8teoip3iVI87CDKRh2oi8WHwYgcKS04N25cp43r36C6KrdSIPIGZdCI
        /AxaWDKQNg4eSOsFy7O93xeWDNAo/43vNrg9aZEHeVGG/N5M1Im6YQODwbCGlBScCz//REuXLKLCvEEB
        QjBciMR6IRpf1mVSb2sWUbuHJ2syqSjLm65pQh6t/LlZI36WnyPNydpBRj6UgbJQJsqW6SRhA2yBTQwG
        IzRSSnDQm3jl5SWUn+3tlYAtuRm0RfRKLjR5hcLM0/WZ5DKJzfD5hbT6lxZ6/VqrRvw84vlC43uX6NWc
        FiKjKgt1oC7UKdODsAnDrZs3bujWMhgMf6SE4Dx69Ii2vbWVSou8PRHwGVeG1ht5rBAGyXONg6gsyysO
        k1aX0ZqrHqExE5/hO5kOw6sfRV5VmSDqRN2wQeYBYSNshc0MBsMXSS84P/90nsaMHOoT1BNdA+iv9cHF
        QPJacxbV5XgFYeyy4gCh8efYl4uN9HW5f9DKUJVt5rcNmTTBT3hgM2xnMBheJK3gPHnyhHbteIeK8rOM
        IG7J8/RoniiC3p93WrNoqGnOpWOWi16/6h1GBaVIM2Smy8g3TJRx1zQXFIywCfNEsFHmhe3wAb4wGIwk
        FZy+vj5aOH+eEbh5givLBlJfW/heDfikfRBNK/TO8zSMzfWZswlHpG0Yk2vkR1koU1WXP2EjbJV5wUUL
        5tH9+/d17xiM/oukE5xr165qO4BlsDbkZtD/WBg+mbmrMtPIX9WSRSt/alYKSygiD/LKclCmqq5ghM2w
        XebHEOvXX6/pXjIY/RNJJTjd3RepoabCCNKJBQPoRmtkYvNT4yBj+dsleibLv21UCooVIq/L5ekpocyf
        g6yCBSNshw/SH/h26VK37i2D0f+QNIJz8cIFnw18L5cOoIcWhzGSD9uyaFSBt1cx453BSiGJhDO2eY9G
        jBZlow5V3cEIH+CLLKOu2q35ymD0RySF4HRfvEA1ld4l6XXugZYmhv2JHcKyjNYp+aRa/o6UKKN1cr5R
        7kZhm6ruUIQv8EmWAV/hM4PR35Bwwbl16ya1NNYawbhZiIYqaMPxh4ZBlK+XUVw2kFacbVIKSDREWSgT
        ZaOOMyH254QifJN+tjbVar4zGP0JCRWcBw8e0MRxo40gxPEBVaBa4VTTqtTc/VVK4YiFc9+vMspHXSob
        rNDc05k0frTWBgxGf0FCBWfJ4oVG8C0oxtKzOkjD8Ys676pUS2e+UjDsYLMoW9aD81UqW8IRPs43HRhF
        GzAY/QUJE5wPjxw2gm6cK4PuRzgZK4n9MTjVrZWVlUEvfVmnFAs7iLLz9BWwkQUZWt0qm8KxT/gKn6X/
        x44e1luFwUhvJERwrly5TOXFnt6CO8fa8YFgPFLtHaIMm1uoFAo7OWyudxfykeroejng1eZB5NavynCX
        FGhtwmCkOxwXHGzz75w41gja4zXRB+0D0VNozPWUk5+bQa/8Lfo9N1aJOlAX6kTdsEFlmxUeE77Lduic
        OI6PQDDSHo4LztEjh4wgW1wS/eQr+EGVN2Bx6FIlEPHg2KXeWwVhg8o2q3zBNJ+DYSaDkc5wVHB6e3up
        trJcCy4MJ262qIPQKrERD2Whx7HinH3L4OGIumQvZ0x+bKKJNpC3EGLjI9qIwUhXOCo4b7y+SgsscGdF
        9Evg4HcN3tv+hjowd+PPYXO8cznfNcbWy9lR6Z2HWrd2td5aDEb6wTHBuX37FpUWek5gt+VFfkTAn4tL
        vUG6+NP4rUwF4wufeDcrwhaVjVaJtkCboCy00Z3bt/VWYzDSC44JzpZN640APRTD6g6IYUihvjxdPSSb
        7DjCEClRZ3V7tmYDbLkV4SFTfx4UbSLbZ8umDXqrMRjpBUcEB4/KVZYXacGEW/Ri7d1sq/AGJw5XqgTB
        CU5/23uwEzapbLVKHPKUtxNWuou1O4EYjHSDI4Lzwf73jcB8J8a5GxCb7lBWYdEAWtUd+V03dhF1wwbY
        MjI/Q2lrJETbyHZCmzEY6QZHBGfypHFaEOHlhNsxDj0uN3sniztmu5RC4CRxdam054qwTWWzVaJt5OsS
        U54Zr7ceg5E+iLvgXLt6lfL0VxNmF8XeCzDf5jd7r/2HNCPlnPcqDXt2V8bee5ul95jQZrj9kMFIJ8Rd
        cLa9vdUISOysVQVZJJysn0HCPpiuC4kbTkl2/dxs7MmZUhi7oB6r8Q6r3nn7Tb0VGYz0QNwFB0MDBA9W
        cqxegh6MGHLIO29wchsrRRAdHDdY8kUdLThWQ3P2VmqTuZ1ry2n8a6U0bnkJjXmpmEa9UEwjFhRpZ6Ea
        x+dRRWMWlVUM1Iif8Rm+QxqkRR7kRRkoC2WibNSBulAn6oYNLc943suCbXdi3MyINpIrcFM7J+ityGCk
        B+IqOHipQD7z0umKfEfudSEwJ2sGabfszS8eQM3mJ1hKBhg9i0QSNsAW+W+8yInrJzYJIfu0NpNuWnhi
        xp+d+t0+aDt+7YGRToir4Jz++ksjEEPd5PdI8PO6TOoqH6hdOl6Tk+HzNG+8iKsm5HUT8SR8qRU+TRKi
        u1r4iLt0Hoe42mKT6WbA019/pbcmg5H6iKvgbFz/hhE43zR4528eiGHD/qpMmi7+klfmeN6dkumsMD8n
        k4pduVRWUkjushKqGFxOVZUVVFtTTfX1ddTY2EQtLa3U2tZObe1DqK6uxif/sud+T+dP/SM9vvA7jfgZ
        n5nTIA/yogyUhTJRNupAXagTdcMG2AKbzPnDET5XCd9nijY4VD3Q59Q52kqmQxsyGOmCuArO83NnGYGD
        5ewV5QOoSQw5wvcqMqgwP5vKS4pEcA+m2toaamxqpDYR/EOGDqehw0da5pCOYVSQ4+kxFOY+TacP/xNR
        t3BbQXyHNEiLPMirKjMYO4YN1wQKtsJm2F5WWkQu4Qt88vXRlxCg5rw/iF7eALrc4l36f37ebL01GYzU
        h4i0+GF4R6tPQMmfzcTyb0lhvtZjqKutpWbRm4hUVEKxusr7ztVbXU8phcbMN0UamR55VWVGQ4gRfIOP
        8BU+y+0CoThiaJvemgxG6kNEWXxw5fIvygDCX/piVx5VVgwWPYEmLRBVAWoXi1w5Wr017v+mRz//Tiky
        ZiIN0iIP8qrKtIvwHUM1CFCRGJb5tpOXPT38YicjPSCizH4cPPC++AvuG0BFBblUU1NN7REOU2Jhx7AR
        Rv1zJv+HUmBURFqZD2Woyo4H24YMperqSirShmDetnOXuOjYh0f01mUwUhciwuwFNquZg6W8tJBaWtuU
        ARZvYmgm7Xhx9r8pxUVFpJX57BzeRUJMVJcVe49NgO/t2aW3MoORmhARZh/OnvnBmJdw5WZSY0OjMpic
        4whhj2dPy7Rx/6kUFxWRFnmQF2Woy3aG9XX1VKCvgGEi+6fz5/XWZjBSDyLC7MPqlSu0wACbmpuVAeQ0
        S4sKNHuK85+mm3/7B6XAmIk0SIs8yKsq02k2NTUZ7bp2dZfe2gxG6kFEmX146cVFRmB0JGgo4s/6ujrD
        poUz/l0pMmYumP7vRvq6+jplmU4TbSltQhszGKkKEWX2wSw4iZr7UNG8AvT60n+l++f/PkBo8Bm+k+mQ
        R1VWImiei2LBYaQy0lpwsMKEpWdMwOZne3fvttX9F+1Y+y906v1/1oif8Zn8HmmRB3mdXKUKRhYcRrog
        5QSnfUiHJgYNjY1UV1erLSNrxwzKS6i02KUdM3DlZQnR8B6ojJUoC2WibNSBulAn6oYNsAU2wTaVzbGS
        BYeRLkhKwUGvorm5RTseUDnYrZ1XKiwIfzwgOZih2QqbYTt8gC+x9JRYcBjpgqQQHM8By1oa7C7T5k6s
        bPlXsSR/EDVWFNOY5lqaMaqdFkwaRS9OHUsv/3ECrXi2k1bNnUprn59B6+bPpKXTxtNz40doxM/4DN8h
        DdIiD/KiDJSFMlE26lDVHY7wCT0k+Ahf4bOqLVRkwWGkCxImOC2trdrhxqICz9GDUHThIGWtm2aP7dAE
        Ycey+XR4zTL6/M019P2eLXTl6G7q+/NBoq8+dISoC3Wi7lNbV2u2wCbYBhthK2xW+WImfEcboC1UbSTJ
        gsNIFzgqOPgM1ztgPkSm82dVST7NHD2ENi2aTX/esop+ObSTHn95VBn4yUzYDNvhA3yBT/BN5TOINkHb
        BGs3mY4Fh5HKcERwsI+kqrrS2DFrZt6gDCowdicPpCcpKC5WCd/gI3yFz6prOtBGaCvzPiYWHEa6wFbB
        WbrELDieQ5rtHUOpUL9mVBJXVZSLwKsryKK2omxy6YLTIYYiqkBNJ8JH+OrKHqD5jjZAW/hf34E2w2FO
        j+AMMz5nwWGkMmwVHPMLDbgsC8GCw5vyM/RmKnIzqbkwRwSbh/Ui4OT3r83sVAZpOhE+Sn/hu2wHtMng
        vEyfXg9WutCGre1DjM/e2rpZb20GI/Vgq+B885fTRmDgGk70buS/MYRoLcw2AkyyWN8vg0lWzHmogjSd
        CB/lhHJxDno5vu3RIoTHle1dpUMvp6a6yvg37olmMFIVtgrO48ePjVv+cNK6usr7SFxZQHBlk1ufzwC7
        5kxRBmg6csUsby8Hwym0hblt0Fbye0wky02Mbc319PDhA721GYzUg62CA5h7OWaW5noFp8GVTaWmoGqu
        KKFbH+9TBmc68uaJvdqeHul/iWiLRpd3eIW2kt+ZeerPn+mtzGCkJmwXHODQwQPa3S3mYCnOyaDK/Ewq
        8jty0F7jpmsfvqsMzHQm9vG0VJb6tEWRGEpViDbCUMv8Obhj+9t66zIYqYu4CA7w1ZdfUEuD7/Ms/hzf
        Wk/Xj78XEIz9hb8e20Ojm0O3UaW7mE4cP6a3KoOR2oib4Fy48DPVVw8OCKAC0cOZOryFjq97lZ58eUQZ
        iP2J2CB4dO1y6hzapLWNf3u1NtXSlSuX9VZlMFIbcRGc7/72V3KXeG7aA2tKC7Tl4M82r6LeTz9QBp4V
        ntzwJy0wa8tcNL6tjg50vZRQ0ULdsAG2wKbOoc2ajaq0Vvjbpwfo5MaVtHz6JKos9rxXDla5S+jHc2f1
        1mUwUhe2C05f3z1qaaw1gmXd/Bl0/9QhZYBFwrXPTTfKNHPuuGH06AvnRQd1om6VTbBVlScS3vvsIK2c
        PcUoc/iQFl6hYqQ8bBecVStfM4LkrSXzlMEUKXEeSZap4jtLn1fmiydRp8oWSdisyhcpIdiyTH72l5Hq
        sFVwHj16RO5Sz9MmIxqrbBvuzBzdbgSdisMbKpX54knUqbJFEjar8kVK9KRaqsq0Muuq3fTkyRO9tRn2
        4RzdK/w99Txl4iR+BywesFVwzHtwdr2yUBlA0bCtptwoV0XMn6jyxZOoU2WLJGxW5YuGWxfPNco988P3
        emsz7AMLjlOwVXC2veU9S/XNjvXK4ImG4Xo4E9rrlfniSdSpskXSrh4OeGqrd0iZ6MfwHnWV2xSYR+iO
        uZygZb1PdFv8mprZ94P+nV1gwXEKtgqO+dXN73ZvVgZPNPxsc5dRrorvvrpImS+eRJ0qWyRhsypfNPzq
        7bVGufv27tFbOzG4P8kvMAXvHNK/jAgWBafv6UDBubtM/9IusOA4BVsF5+OPjhuB8UHXUmXwRMtXZk4y
        yjZz+sg2evj5YWWeeBJ1om6VTbBVlSda7ly2wCgbGyoTCZXg9Dw1he7r31uHRcF5OIwFJ41gq+DcunXT
        OGiIazbtFAJcXnVw1VJtHw7mR6aNaNX2wCTyNkDUDRtgC2yCbbDRzkvEsG+pzu254qMoP4t6e3v11k4M
        1IIjWLiGHulprMHqkEqg1yw4oscTWUUWwILjFGwVHGDOs979MpjsVAUR0zpXz51mtOfiRfP1Vk4cggqO
        4K2uc3oqK4hAcOIOFhynYLvgnP/xHLlyPVeJ4qUCvISQiCFPqhObJfF6hBSb4oJsunSpW2/lxCGU4PQ8
        VU73LG+IZsHpj7BdcIB3d+0wAgUc1VRN+/70Iv3vjg10du+bCR0GJSshytgs+M2OdfTeihdoWH2FTxse
        /GC/3rqJRWjBEbQ8tGLB6Y+Ii+AAe97dZfR0/Ln0j+OVQdefOX2keukfPZtkERsgrOAIWhtaWRWcBC+L
        n11Dt8yfmxmrKKkmxCWljwFpxL8jwaEpatvBiOfdYofwIH746fx5em7OswHP7uK5lHR+nSFS4p2rfP0i
        eUmI9cL586i7+6LemsmBAMERv7T3/ffmCIZfKk92wVkT+FkQRjZ3JRBKaHz4tPA1SsEJJTT+dFB4hAfx
        B1avTn50wiegrh3tf5duBSP2LJnb5tNPPqY7t2/rrZdcUAkOflkDez7hlsqTXHAipGXRUe0riojhBSdg
        c6YlRrO1IXIID5wDdsnKoMI1DKrg0/iF+PN4fCfRwS1EBzYKtRb/xb/xuSp9MlHaDpthO3wIYzvmbGS7
        fHLyI721khPBBCfyOZnUERxfMVHYrdHChHkwsXmof69B+HZXkcZgGMEJ0rPx7XEG8cGBno7wwDl8/3/f
        GYGFZ3FVwUe4ymL/eqJ9bwRy/waiz5NYdGAbbFTaLnwKck3HwmdGGe1y7dpVvbWSE8EFR0Dxyx58aJUK
        ghP8r35gj04wlMA+WhboRyjxCNoTCpFHOd8U3AdVTyji4WGEEB44B7zqUFlepAVW0EfvTuxWB6zkR0k8
        FINtKpsl4ZtfHpwGH1yU62mTtia9pZIXIQVHwPrQKvkFJ/Q8lCpPiGGJz+ZF0MIGxoA8YHDBCWz7cL2u
        CH2wAcIDZ7F4ofcemcuHdwUEIJ06KH7HgvVwxOdJ38MJYjt8gm9+eXDIVbbH66vFMDPJEU5wrAtJsgtO
        +MAL7CEEC3CFD73is3CIqFdktT39oOgVxbOXIzxwFsePHTUCbNtLzwUEoEYE7rHtRAc3+86DJLPYSMJG
        8/wTfIAvQWw3v1GF6z2SHeEFR0AxtAr8JU5ywbEyn2F1CKlalfKZtwkG1XxOEMGJaDhrRpS+RwnhgbPA
        FaTlxflagOH8UX9eHsduYrc+nGqqr6InTx7rrZS8sCQ4AuH/+ie54ETZO1AGecB8TIh5GH9YzBvY3taH
        RtaHwbFDeOA8Xl2+1PtX3cZ7c1KNH659xWiHN7eI3lAKwKrghP/L2Y8Ex38uJpLT7hYFx/r/l0BYHxrG
        DuGB8zh75gcj0OaMFQ2oCMZoiSMCeDlh96sLbSGuhsCrDGvmTbP99Lt8kwqPBvb09Oitk9yI6Bc75PwA
        C44lWNxpHIvgBA7H0kxwgKmdEw3ROfPeVmVQRsqbH+3TVr9kuXYTq0moQ1V3pDRfKrZk8UK9VZIfkf5i
        B//ryYJjCSw49uDbb78xAm7WmA5lUEbKdfNnGmXGi6hDVXckxOXyONCK8tC7+eXSJb1Vkh+R/2IHG1qx
        4FgCD6nsw/SpzxiB/MWba5TBGQlnj+0wyjtdn0nf2MR3K73vpKMOVd2REJd2yfKWLlmkt0ZqIKpfbEVg
        9kyawpPGVsCTxvbh/PkfjRPleAol1gfzcPeODOQzjYOI2rNsIcqS5b4xP7ZH7m59vI8qijyvauJ10lSZ
        u5GI+i+pYtk2gOkqOLwsbkB4kFisW7vaCGYIhipIrfLrbW8YZW1wD1SKRzREWbLc09vWKuu2yhc6xxhl
        7d2zW2+F1EEsXffAv6R+TFfBUfmQLBv/FEKVVhv//NHX16c92I8AxA2BsQytsIok7/+tzsmgvjZFL2dI
        DtGEwUTTGsWYrsVD/Dze7fnOLz3KQFkos95dFNNKFS6Wl2IzYezIlNh3449YBEcZFGamreAIBBxTEEOl
        kA2n6t2AwYdjgYIebi5G4Xcch1OA8CDx+OH776kwzzNsqSzJj+nqil3LFxpBvU72cobmET07hGjFXKLN
        y4m2vqYmvkMapEUekRdlyPJiedzv3L63qFj3Ea+TXr78i+59aiE2wREINbRKZ8Fx4vCmUtCDC0jgvE+a
        Hd4MBfPVFdiBfP34e8rADUfMA3XUDdbKyRskekwTGog2iv/ZKoEJRZEHeVEGykKZ0c4xXfxgO9WUFhj+
        ffbJSd3r1EPMgiMQdGiVzoIDBLt4y2c+R+GvD0MJjkAQQfe1K0hPM45zNxLCg+QA3szGfhQZlEPrK6Le
        84J7k105np5JcW4mfbZoulpUQhB5kBdloKyzooeiqiscfzm00xjmgRvXr9U9Tk3YIThBf+HTXXCAoD0X
        qwwjOAKqnkt4xncoJSE8SB48fPiQZkybbATniMYquvOx+IVTBHI44oIvKTrgijFtdHvdUqW4mIk0SCvz
        oYyQl4WF4JWju6mxotgoC0vgENZUhj2CI6AI1n4hOECwnk4ARTqLG/8CYGVVUNKBno2E8CC5cO/ePRo3
        ergRpGOaa+nuJweUAR2O2M1bVpBtlFWSO5CWjGimE/OnUXfXQurd8LJG/IzP8B3SyPTIG+2Tvb8e20Mt
        laVGWbNmTKNHj5z63xo/2CY4gE9QBJvgTEPBkQglPHKYFa3gSIQSHgeFRkJ4kHzo/e036pw4zghWPJnS
        fXC7MrDDEXfuTBrSYJRllcijvK/HAr/fs4UaB3t7Ns/Pmy16bw907xiM/oukFBzg/v37NHum99XJclc2
        fbIpuqENDkqe2rqaJrY3akvvskx/4jukQdpors1Anv0rl1ChqZf08kuLtZsOGQxGEgsOgEBdu9p7yBFc
        MnUc3Tm5XxnwVnjzxF468vpy7fT3i1PHasTP+AzfqfJYYY8YQpmPVuBpnB3b3075ORsGw04kteBInDh+
        jEoLPRdVgbVlLjq27lXtEKQq+J0k7iTGq6LuwhzDvkp3MZ3++ivdegaDIZESggPgRPXkSd55HXBkY1XU
        w59YCbE7se41bc+Q2aZ5c2bS9eupdT6KwXAKKSM4AIYn+/bu0Q49moN8eEOlNneCFyxV4mAnf/v0gLab
        ua26zMeGmopS7b5mBoMRHCklOBJ4lXJ11wrjOIQk7gfGHM+pratsvZ0PQnZi/QpaMGkUleT71llalEdb
        Nm3QlvMZDEZopKTgSFy9coW6/vSqcSm7jxC4smnaiFbatGi2diD08pFd9NjC0AtCdenwTvps8yrtKorO
        oU3GGSgzq9wl2q7hmzdv6tYwGIxwSGnBkejt7aU97+7y2TCoInYNt4qh0NiWWposhOTZ0R00c/QQISrN
        2gbD5ooSyg+5bD5A2x906OABevCA99UwGJEiLQTHjCtXLmvL0bgz2byyFS1xsnvm9Cna3TU3blzXa2Ew
        GNEg7QTHDBwlwHvm6P2sWvkazX72jzS8o5Ua6yq1peui/CwqLsjRhkfN9dU0cli7tsqEFzDf3/senTt7
        NiXvrGEwkhVpLTgMBiO5wILDYDAcAwsOg8FwDCw4DAbDMbDgMBgMx8CCw2AwHAMLDoPBcAxJLTg4rPnw
        wQPt7SrsJr579y7dvn2Lbt64Qdd7eujatavaRj+cJO++eJEuXrjgCFEX6kTdsAG2wCbYdvfuHc1W2Azb
        +T4cBsOLpBEcBOdvv93VdvMiiBHQqmBPRcIX+ATffhOiCV8ZjP6IhAoOziMhCLu7neudJAvhM3znM1mM
        /oSECo4qEPsjcX8zg9EfkFDBuXXrJl261K0Mwv5A+I424HkeRn9BwudwEGx99+5pE66Y50hnAYJv8BG+
        wmcWGkZ/Q9JMGpuB1xowzMD7VOgBYK6j59df6drVq3T58i9JKUqwCbbBRtgKm2E7fIAv/FQMg5GkgmMV
        CGLzsjlWgLAsfeeOztu3td4EAh8382HpGkKAS857egSFMGgUP+MzfIc0SIs8yIsyZHkoG3WYl71ZSBgM
        60hpwWEwGKkFFhwGg+EYWHAYDIZjYMFhMBiOgQWHwWA4BhYcBoPhEIj+H8+bQl1HeIrrAAAAAElFTkSu
        QmCC
</value>
  </data>
</root>